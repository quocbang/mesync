// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kenda/types/types.proto

package types

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Decimal is a substitution of the numeric, including float, double, int32, int64.
type Decimal struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Decimal) Reset()         { *m = Decimal{} }
func (m *Decimal) String() string { return proto.CompactTextString(m) }
func (*Decimal) ProtoMessage()    {}
func (*Decimal) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2f1d83f7386b9a4, []int{0}
}

func (m *Decimal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Decimal.Unmarshal(m, b)
}
func (m *Decimal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Decimal.Marshal(b, m, deterministic)
}
func (m *Decimal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Decimal.Merge(m, src)
}
func (m *Decimal) XXX_Size() int {
	return xxx_messageInfo_Decimal.Size(m)
}
func (m *Decimal) XXX_DiscardUnknown() {
	xxx_messageInfo_Decimal.DiscardUnknown(m)
}

var xxx_messageInfo_Decimal proto.InternalMessageInfo

func (m *Decimal) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ExpDecimal struct {
	Value                int64    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Exp                  int32    `protobuf:"varint,2,opt,name=exp,proto3" json:"exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExpDecimal) Reset()         { *m = ExpDecimal{} }
func (m *ExpDecimal) String() string { return proto.CompactTextString(m) }
func (*ExpDecimal) ProtoMessage()    {}
func (*ExpDecimal) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2f1d83f7386b9a4, []int{1}
}

func (m *ExpDecimal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpDecimal.Unmarshal(m, b)
}
func (m *ExpDecimal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpDecimal.Marshal(b, m, deterministic)
}
func (m *ExpDecimal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpDecimal.Merge(m, src)
}
func (m *ExpDecimal) XXX_Size() int {
	return xxx_messageInfo_ExpDecimal.Size(m)
}
func (m *ExpDecimal) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpDecimal.DiscardUnknown(m)
}

var xxx_messageInfo_ExpDecimal proto.InternalMessageInfo

func (m *ExpDecimal) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *ExpDecimal) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func init() {
	proto.RegisterType((*Decimal)(nil), "kenda.types.Decimal")
	proto.RegisterType((*ExpDecimal)(nil), "kenda.types.ExpDecimal")
}

func init() { proto.RegisterFile("kenda/types/types.proto", fileDescriptor_c2f1d83f7386b9a4) }

var fileDescriptor_c2f1d83f7386b9a4 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcf, 0x4e, 0xcd, 0x4b,
	0x49, 0xd4, 0x2f, 0xa9, 0x2c, 0x48, 0x2d, 0x86, 0x90, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42,
	0xdc, 0x60, 0x09, 0x3d, 0xb0, 0x90, 0x92, 0x3c, 0x17, 0xbb, 0x4b, 0x6a, 0x72, 0x66, 0x6e, 0x62,
	0x8e, 0x90, 0x08, 0x17, 0x6b, 0x59, 0x62, 0x4e, 0x69, 0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67,
	0x10, 0x84, 0xa3, 0x64, 0xc2, 0xc5, 0xe5, 0x5a, 0x51, 0x80, 0x55, 0x0d, 0x33, 0x54, 0x8d, 0x90,
	0x00, 0x17, 0x73, 0x6a, 0x45, 0x81, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x6b, 0x10, 0x88, 0xe9, 0x64,
	0x1d, 0x65, 0x99, 0x9e, 0x59, 0x92, 0x93, 0x98, 0xa4, 0x07, 0xb1, 0x2c, 0x39, 0x3f, 0x57, 0xaf,
	0xa4, 0x5c, 0x1f, 0xe2, 0xa4, 0xdc, 0xd4, 0xe2, 0xca, 0xbc, 0x64, 0xfd, 0x82, 0xec, 0x74, 0x7d,
	0xb0, 0x8b, 0x92, 0x4a, 0xd3, 0xf4, 0x91, 0x1c, 0x9b, 0xc4, 0x06, 0x16, 0x35, 0x06, 0x04, 0x00,
	0x00, 0xff, 0xff, 0xef, 0x5d, 0x9d, 0xac, 0xc2, 0x00, 0x00, 0x00,
}
