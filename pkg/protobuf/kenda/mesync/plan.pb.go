// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kenda/mesync/plan.proto

package mesync

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	types "gitlab.kenda.com.tw/kenda/mesync/pkg/protobuf/kenda/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Product struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_8afd2f77df96bada, []int{0}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Product) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type CreatePlanRequest struct {
	Date                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Product              *Product             `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
	DepartmentId         string               `protobuf:"bytes,3,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	Quantity             *types.Decimal       `protobuf:"bytes,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreatePlanRequest) Reset()         { *m = CreatePlanRequest{} }
func (m *CreatePlanRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePlanRequest) ProtoMessage()    {}
func (*CreatePlanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8afd2f77df96bada, []int{1}
}

func (m *CreatePlanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePlanRequest.Unmarshal(m, b)
}
func (m *CreatePlanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePlanRequest.Marshal(b, m, deterministic)
}
func (m *CreatePlanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePlanRequest.Merge(m, src)
}
func (m *CreatePlanRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePlanRequest.Size(m)
}
func (m *CreatePlanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePlanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePlanRequest proto.InternalMessageInfo

func (m *CreatePlanRequest) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *CreatePlanRequest) GetProduct() *Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *CreatePlanRequest) GetDepartmentId() string {
	if m != nil {
		return m.DepartmentId
	}
	return ""
}

func (m *CreatePlanRequest) GetQuantity() *types.Decimal {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func init() {
	proto.RegisterType((*Product)(nil), "kenda.mesync.Product")
	proto.RegisterType((*CreatePlanRequest)(nil), "kenda.mesync.CreatePlanRequest")
}

func init() { proto.RegisterFile("kenda/mesync/plan.proto", fileDescriptor_8afd2f77df96bada) }

var fileDescriptor_8afd2f77df96bada = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xcf, 0x4a, 0xf4, 0x30,
	0x14, 0xc5, 0x69, 0xbf, 0xf2, 0x8d, 0x66, 0x46, 0xc1, 0xa0, 0x58, 0xba, 0x51, 0xc6, 0x8d, 0x1b,
	0x13, 0x19, 0x77, 0xe2, 0x4a, 0xdd, 0xb8, 0x1b, 0x8a, 0x2b, 0x37, 0x92, 0x36, 0xd7, 0x12, 0x26,
	0xff, 0xa6, 0xbd, 0x45, 0xfa, 0x8c, 0xbe, 0x94, 0x98, 0xb4, 0xce, 0xb8, 0x09, 0xe1, 0x9c, 0x5f,
	0x4e, 0xce, 0xbd, 0xe4, 0x7c, 0x03, 0x56, 0x0a, 0x6e, 0xa0, 0x1b, 0x6c, 0xcd, 0xbd, 0x16, 0x96,
	0xf9, 0xd6, 0xa1, 0xa3, 0x8b, 0x60, 0xb0, 0x68, 0x14, 0x17, 0x8d, 0x73, 0x8d, 0x06, 0x1e, 0xbc,
	0xaa, 0xff, 0xe0, 0xa8, 0x0c, 0x74, 0x28, 0x8c, 0x8f, 0x78, 0x31, 0xe6, 0xe0, 0xe0, 0xa1, 0x8b,
	0x67, 0x34, 0x96, 0x37, 0x64, 0xb6, 0x6e, 0x9d, 0xec, 0x6b, 0xa4, 0xc7, 0x24, 0x55, 0x32, 0x4f,
	0x2e, 0x93, 0xeb, 0xc3, 0x32, 0x55, 0x92, 0x52, 0x92, 0xfd, 0x90, 0x79, 0x1a, 0x94, 0x70, 0x5f,
	0x7e, 0x25, 0xe4, 0xe4, 0xa9, 0x05, 0x81, 0xb0, 0xd6, 0xc2, 0x96, 0xb0, 0xed, 0xa1, 0x43, 0xca,
	0x48, 0x26, 0x05, 0x42, 0x78, 0x3b, 0x5f, 0x15, 0x2c, 0xb6, 0x61, 0x53, 0x1b, 0xf6, 0x3a, 0xb5,
	0x29, 0x03, 0x47, 0x39, 0x99, 0xf9, 0xf8, 0x69, 0x08, 0x9f, 0xaf, 0xce, 0xd8, 0xfe, 0x38, 0x6c,
	0x6c, 0x54, 0x4e, 0x14, 0xbd, 0x22, 0x47, 0x12, 0xbc, 0x68, 0xd1, 0x80, 0xc5, 0x77, 0x25, 0xf3,
	0x7f, 0xa1, 0xd3, 0x62, 0x27, 0xbe, 0x48, 0x7a, 0x4b, 0x0e, 0xb6, 0xbd, 0xb0, 0xa8, 0x70, 0xc8,
	0xb3, 0x10, 0x7b, 0x3a, 0xc6, 0xc6, 0x81, 0x9f, 0xa1, 0x56, 0x46, 0xe8, 0xf2, 0x97, 0x7a, 0x7c,
	0x78, 0xbb, 0x6f, 0x14, 0x6a, 0x51, 0x8d, 0x5c, 0xed, 0x0c, 0xc3, 0x4f, 0xfe, 0x77, 0xe7, 0x9b,
	0x66, 0xb7, 0xd6, 0x7d, 0xa7, 0xfa, 0x1f, 0xe4, 0xbb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfe,
	0x18, 0xd6, 0x3e, 0xa4, 0x01, 0x00, 0x00,
}
